{
  "swagger" : "2.0",
  "info" : {
    "description" : "API backend for Project Memory Clients",
    "version" : "1.0.5",
    "title" : "Memory API",
    "contact" : {
      "email" : "admin@project-memory.org"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "mods",
    "description" : "Operations available to moderators"
  }, {
    "name" : "users",
    "description" : "Operations available to authenticated users"
  }, {
    "name" : "anonymous",
    "description" : "Anonymous access operations (authentication related)"
  } ],
  "paths" : {
    "/auth/login" : {
      "post" : {
        "tags" : [ "anonymous" ],
        "summary" : "attemps a log in with post body",
        "operationId" : "auth_Login",
        "description" : "Validates the user credentials specified in the post body and generates a login session if correct.\n",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Login form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful login, token returned",
            "schema" : {
              "type" : "string",
              "description" : "auth token",
              "example" : "ax2qwdsqds31352-xaAdwx_Q23d1"
            }
          },
          "400" : {
            "description" : "unsuccessful login / bad request",
            "schema" : {
              "type" : "string",
              "description" : "Error message",
              "example" : "Invalid request body."
            }
          }
        }
      }
    },
    "/auth/login-provider" : {
      "post" : {
        "tags" : [ "anonymous" ],
        "summary" : "attempts a log in with provider details in post body",
        "operationId" : "auth_LoginProvider",
        "description" : "Uses the provider credentials specified in the post body and generates a login session if valid.\n",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Provider login data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginProviderModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful login, token returned",
            "schema" : {
              "type" : "string",
              "description" : "auth token",
              "example" : "axwqewxqw/wsqwx89123-_d123"
            }
          },
          "401" : {
            "description" : "requires registration with the API"
          }
        }
      }
    },
    "/auth/validate" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "valiates a user token",
        "operationId" : "auth_Validate",
        "description" : "Validates the authentication token in the header to establish access. Used internally and to validate token on client startup.\n",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "header",
          "name" : "X-AuthToken",
          "description" : "Auth token to validate",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "auth token validated successfully",
            "schema" : {
              "type" : "string",
              "example" : "axweasdwadqwe131xc123",
              "description" : "The username belonging to token owner"
            }
          },
          "400" : {
            "description" : "token failed to validate",
            "schema" : {
              "type" : "string",
              "description" : "Error message",
              "example" : "Invalid token."
            }
          }
        }
      }
    },
    "/users/register" : {
      "post" : {
        "tags" : [ "anonymous" ],
        "summary" : "registers a user with the service",
        "operationId" : "users_Register",
        "description" : "Validates the input posted and returns an auth token on successful registration.\n",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Registration form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RegisterModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful registration and automatic login",
            "schema" : {
              "type" : "string",
              "description" : "auth token"
            }
          },
          "400" : {
            "description" : "invalid request / error creating account",
            "schema" : {
              "type" : "string",
              "description" : "error message",
              "example" : "Invalid request body."
            }
          },
          "500" : {
            "description" : "internal server error / exception in request processing"
          }
        }
      }
    },
    "/users/current-user-data" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "gets current user data",
        "operationId" : "users_GetCurrentUserData",
        "description" : "Fetches all user data for attached auth token from database.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "name" : "X-AuthToken",
          "type" : "string",
          "description" : "User auth token."
        } ],
        "responses" : {
          "200" : {
            "description" : "successful retrieval of user",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "auth token failed to validate"
          }
        }
      }
    },
    "/lessons/list" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "gets active user lessons",
        "operationId" : "lessons_GetList",
        "description" : "Fetches list of user active lessons sorted by language.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "name" : "X-AuthToken",
          "type" : "string",
          "description" : "User auth token."
        }, {
          "in" : "query",
          "name" : "language",
          "type" : "string",
          "description" : "IETF Tag for requested language."
        }, {
          "in" : "query",
          "name" : "from",
          "type" : "string",
          "description" : "id from which to paginate"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful query",
            "schema" : {
              "$ref" : "#/definitions/LessonList"
            }
          },
          "403" : {
            "description" : "auth token failed to validate"
          }
        }
      }
    },
    "/lessons/languages-list" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "gets all lessons used by user",
        "operationId" : "lessons_GetLanguages",
        "description" : "Fetches list of all languages used by user.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "name" : "X-AuthToken",
          "type" : "string",
          "description" : "User auth token."
        } ],
        "responses" : {
          "200" : {
            "description" : "successful query",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Language"
              }
            }
          },
          "403" : {
            "description" : "auth token failed to validate"
          }
        }
      }
    }
  },
  "definitions" : {
    "LoginModel" : {
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "LoginProviderModel" : {
      "properties" : {
        "provider" : {
          "type" : "string"
        },
        "accessToken" : {
          "type" : "string"
        }
      }
    },
    "RegisterModel" : {
      "properties" : {
        "email" : {
          "type" : "string",
          "description" : "email address for new user",
          "example" : "test@test.test"
        },
        "username" : {
          "type" : "string",
          "description" : "username for new user login",
          "example" : "username123"
        },
        "password" : {
          "type" : "string",
          "description" : "password for new account",
          "example" : "imasecurepassword"
        },
        "passwordAgain" : {
          "type" : "string",
          "description" : "password validation",
          "example" : "imasecurepassword"
        }
      }
    },
    "User" : {
      "type" : "object",
      "additionalProperties" : false,
      "required" : [ "Name", "UserAddress", "BirthDate", "EmailVerified", "PhoneVerified", "UpdatedAt" ],
      "properties" : {
        "Username" : {
          "type" : "string"
        },
        "Name" : {
          "$ref" : "#/definitions/FullName"
        },
        "UserAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "BirthDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "EmailVerified" : {
          "type" : "boolean"
        },
        "Email" : {
          "type" : "string"
        },
        "Gender" : {
          "type" : "string"
        },
        "Locale" : {
          "type" : "string"
        },
        "PhoneVerified" : {
          "type" : "boolean"
        },
        "PhoneNumber" : {
          "type" : "string"
        },
        "ProfilePicture" : {
          "type" : "string"
        },
        "DisplayName" : {
          "type" : "string"
        },
        "UpdatedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ZoneInfo" : {
          "type" : "string"
        },
        "Roles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "FullName" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "FirstName" : {
          "type" : "string"
        },
        "MiddleName" : {
          "type" : "string"
        },
        "LastName" : {
          "type" : "string"
        }
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ValueType"
      } ]
    },
    "ValueType" : {
      "type" : "object",
      "additionalProperties" : false
    },
    "Address" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "Line1" : {
          "type" : "string"
        },
        "Line2" : {
          "type" : "string"
        },
        "Country" : {
          "type" : "string"
        },
        "PostalCode" : {
          "type" : "string"
        },
        "City" : {
          "type" : "string"
        },
        "Locality" : {
          "type" : "string"
        }
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ValueType"
      } ]
    },
    "Language" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "IETFTag" : {
          "type" : "string"
        },
        "UnlocalizedName" : {
          "type" : "string"
        },
        "UnlocalizedCountryName" : {
          "type" : "string"
        },
        "NativeName" : {
          "type" : "string"
        },
        "NativeCountryName" : {
          "type" : "string"
        }
      }
    },
    "LanguagePair" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "From" : {
          "$ref" : "#/definitions/Language"
        },
        "To" : {
          "$ref" : "#/definitions/Language"
        }
      }
    },
    "Lesson" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "Id" : {
          "type" : "string"
        },
        "From" : {
          "type" : "string"
        },
        "Reading" : {
          "type" : "string"
        },
        "To" : {
          "type" : "string"
        },
        "Languages" : {
          "$ref" : "#/definitions/LanguagePair"
        }
      }
    },
    "LessonList" : {
      "type" : "object",
      "additionalProperties" : false,
      "allOf" : [ {
        "type" : "array",
        "items" : {
          "$ref" : "#/definitions/Lesson"
        }
      } ]
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/Project-Memory/MemoryApi/1.0.0"
}